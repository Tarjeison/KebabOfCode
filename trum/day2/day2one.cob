IDENTIFICATION DIVISION.
PROGRAM-ID. INTCODE.
ENVIRONMENT DIVISION.
    INPUT-OUTPUT SECTION.
    FILE-CONTROL.
    SELECT SYSIN ASSIGN TO KEYBOARD ORGANIZATION LINE SEQUENTIAL. 

DATA DIVISION.
    FILE SECTION. 
    FD SYSIN. 
    01 FILE-INPUT-LINE PIC X(2000).
    88 EOF VALUE HIGH-VALUES.
    
WORKING-STORAGE SECTION.
    01  X-INPUT-LINE                     PIC X(2000).
    01  X-SEP-CHAR                       PIC X(1).
    01  X-RET-TABLE.
        02 CMAX                          PIC 9(5) COMP-3.
        02 CODE-ARRAY OCCURS 0 TO 9999 TIMES DEPENDING ON CMAX.
            07 VAL           PIC 9(8).
            
    01 DISP9-5                         PIC ZZZZ9.
    01 COUNTER                         PIC 9(5) COMP-3.
    01 SPACE-COUNTER          PIC 9(5) COMP-3.
    
    01 WS-INTRANGE.
        05 COMPARE-ACTION PIC 9(8).
        05 ACTION.
            10 AD PIC 9 VALUE 1.
            10 MULT PIC 9 VALUE 2.
            10 TERM PIC 99 VALUE 99.
        05 COUNTER-P-ONE PIC 9(5) COMP-3.
        05 COUNTER-P-TWO PIC 9(5) COMP-3.
        05 COUNTER-P-THREE PIC 9(5) COMP-3.
        05 FIRST-ELE PIC 9(8).
        05 SECOND-ELE PIC 9(8).
        05 THRID-ELE PIC 9(8).
        05 NEW-ELE PIC 9(8).
        05 INTCODE-TEMP PIC 9(8).
    
PROCEDURE DIVISION.
0000-MAIN.
    OPEN INPUT SYSIN.
    READ SYSIN.
    MOVE FILE-INPUT-LINE TO X-INPUT-LINE
    MOVE ','  TO X-SEP-CHAR
    PERFORM 0100-SEP-CALL.
    PERFORM 0150-REMOVE-SPACES.
    PERFORM 0200-INTRANGE-CALCULATION.
    STOP RUN.

0100-SEP-CALL.
    CALL 'SEP' USING X-INPUT-LINE X-SEP-CHAR X-RET-TABLE
    MOVE CMAX  TO DISP9-5
    DISPLAY 'SEP says the given input, seperated by "' X-SEP-CHAR
          '" has the following number of entries: ' DISP9-5
    END-DISPLAY.
0100-END.

0150-REMOVE-SPACES.
#   When moving a char (X) to a numeric field (9), COBOL moves it to the start with tailing spaces :)))
    DISPLAY 'When moving values to PIC (8) field, cobol moves number to start'
    MOVE 0 TO COUNTER
    PERFORM CMAX TIMES
        ADD 1 TO COUNTER
        MOVE COUNTER TO DISP9-5
        MOVE 0 TO SPACE-COUNTER
        INSPECT CODE-ARRAY(COUNTER) TALLYING 
            SPACE-COUNTER FOR CHARACTERS BEFORE SPACE
        MOVE CODE-ARRAY (COUNTER)(1:SPACE-COUNTER) TO INTCODE-TEMP
        MOVE INTCODE-TEMP TO CODE-ARRAY(COUNTER)
    END-PERFORM.
0150-END.

0200-INTRANGE-CALCULATION. 
    MOVE 1 TO COUNTER
    PERFORM UNTIL COUNTER > CMAX
        COMPUTE COUNTER-P-ONE = COUNTER + 1
        COMPUTE COUNTER-P-TWO = COUNTER + 2
        COMPUTE COUNTER-P-THREE = COUNTER + 3
        MOVE CODE-ARRAY(COUNTER) TO COMPARE-ACTION
        EVALUATE COMPARE-ACTION
            WHEN AD
                PERFORM 0300-ACTION-ADDITION
            WHEN MULT
                PERFORM 0350-ACTION-MULTIPLICATION
            WHEN TERM
                DISPLAY 'Code: ', CODE-ARRAY(1)
                STOP RUN
        END-EVALUATE
        ADD 4 TO COUNTER
     END-PERFORM
     .
0200-END.

0300-ACTION-ADDITION.
    PERFORM 0375-GET-INDEXES.
    MOVE CODE-ARRAY(FIRST-ELE) TO FIRST-ELE
    MOVE CODE-ARRAY(SECOND-ELE) TO SECOND-ELE
    COMPUTE NEW-ELE = FIRST-ELE + SECOND-ELE
    MOVE NEW-ELE TO CODE-ARRAY(THRID-ELE)
    .
0300-END.

0350-ACTION-MULTIPLICATION.
    PERFORM 0375-GET-INDEXES.
    MOVE CODE-ARRAY(FIRST-ELE) TO FIRST-ELE
    MOVE CODE-ARRAY(SECOND-ELE) TO SECOND-ELE
    COMPUTE NEW-ELE = FIRST-ELE * SECOND-ELE
    MOVE NEW-ELE TO CODE-ARRAY(THRID-ELE)
    .
0350-END.

0375-GET-INDEXES.
#   COBOL is indexed at 1... :)))
    MOVE CODE-ARRAY(COUNTER-P-ONE) TO FIRST-ELE
    MOVE CODE-ARRAY(COUNTER-P-TWO) TO SECOND-ELE
    MOVE CODE-ARRAY(COUNTER-P-THREE) TO THRID-ELE
    ADD 1 TO FIRST-ELE
    ADD 1 TO SECOND-ELE
    ADD 1 TO THRID-ELE
    .
0375-END.

0500-PRINT-TABLE.
MOVE 0 TO COUNTER
    PERFORM CMAX TIMES
        ADD 1 TO COUNTER
        MOVE COUNTER TO DISP9-5
        DISPLAY DISP9-5 ': ' CODE-ARRAY (COUNTER) ':'
    END-PERFORM
    .
0500-END.

END PROGRAM INTCODE.

IDENTIFICATION DIVISION.
PROGRAM-ID. SEP.
DATA DIVISION.
WORKING-STORAGE SECTION.
    01 SEP-COUNTER                     PIC 9(5) COMP-3.
    01 STARTING-POINT                  PIC 9(5) COMP-3.
    01 TEMP-NUMERIC                    PIC 9(3).
LINKAGE SECTION.
    01  X-INPUT-LINE                   PIC X(2000).
    01  X-SEP-CHAR                     PIC X(1).
    01  X-RET-TABLE.
    02 CMAX                           PIC 9(5) COMP-3.
        02 CODE-ARRAY OCCURS 0 TO 9999 TIMES DEPENDING ON CMAX.
                07 VAL                    PIC 9(8).

PROCEDURE DIVISION USING X-INPUT-LINE
                         X-SEP-CHAR
                         X-RET-TABLE.

MAIN SECTION.
MN-00.
    INITIALIZE SEP-COUNTER, X-RET-TABLE.
    MOVE 1 TO STARTING-POINT.
  
    INSPECT X-INPUT-LINE TALLYING SEP-COUNTER FOR ALL
          X-SEP-CHAR.
  
    IF SEP-COUNTER < 9999
        ADD 1 TO SEP-COUNTER
    ELSE
        MOVE 9999 TO SEP-COUNTER
    END-IF
    PERFORM SEP-COUNTER TIMES
        ADD  1  TO CMAX OF X-RET-TABLE
    
        UNSTRING X-INPUT-LINE DELIMITED BY X-SEP-CHAR
            INTO CODE-ARRAY(CMAX OF X-RET-TABLE)
            WITH POINTER STARTING-POINT
        END-UNSTRING
    
  END-PERFORM
  GOBACK.

END PROGRAM SEP.
